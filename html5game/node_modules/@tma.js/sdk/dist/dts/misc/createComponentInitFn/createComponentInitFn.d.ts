import { LaunchParamName } from '../../launch-params/types.js';
import { StorageKey, StorageValue } from '../../storage/storage.js';
import { FactoryDynamic, FactoryStatic, InitComponentFn, WithOnChange } from './types.js';

/**
 * Creates new init function based only on common options.
 * @param factory - function creating new component instance.
 */
export declare function createComponentInitFn<R, LP extends LaunchParamName = never>(factory: FactoryStatic<LP, R>): InitComponentFn<LP, R, never>;
/**
 * Creates new init function based on common options and storage data.
 * @param factory - function creating new component instance.
 * @param storageKey - storage key to restore component from.
 */
export declare function createComponentInitFn<SK extends StorageKey, R extends WithOnChange<StorageValue<SK>> | Promise<WithOnChange<StorageValue<SK>>>, LP extends LaunchParamName = never>(storageKey: SK, factory: FactoryDynamic<LP, R, SK>): InitComponentFn<LP, R, StorageValue<SK>>;
